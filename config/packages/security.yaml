security:
    enable_authenticator_manager: true
    # Non recommandé, car ça peut aider un utilisateur malveillant à savoir si un email est présent sur le site
    hide_user_not_found: false
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider

    # Role hierarchy - Rajouter des roles/autisations à des ROLE
    role_hierarchy:
        ROLE_ADMIN: [ROLE_COMMENT_ADMIN, ROLE_USER_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_HUMAN_RESOURCES: [ROLE_USER_ADMIN]

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            # entry_point: App\Security\LoginFormAuthenticator
            # Authenticator 1 (form_login)
            entry_point: form_login
            custom_authenticator:
            #    - App\Security\LoginFormAuthenticator
                - App\Security\DummyAuthenticator
            form_login:
                login_path: app_login
                check_path: app_login
                username_parameter: email
                password_parameter: password
                enable_csrf: true
            # Active un listener pour la route /logout
            # Toute la config possible au symfony console config:dump security
            logout: true
                # change la route pour la redirection apres logout
                # target: /
                # change la route du listerner pour le logout
                # path: /logout

            # Authenticator 2 (remember_me)
            # Crée un cookie long session Remember me
            remember_me:
                secret: '%kernel.secret%'
            # Crée un cookie long session Remember me automatiquement, on peut faire ceci aussi dans LoginFormAuthenticator
                always_remember_me: true

            # Invalide automatiquement un remember_me cookie sur tous les pc connectés si le password change (utilie si on veut déconnecter qqn)
                signature_properties: [password]

            # Authenticator 3 (switch_user)
            # Impersonation - se connecter comme un certain user / rôle
            # Le user doir avoir le rôle ROLE_ALLOWED_TO_SWITCH => voir role_hierarchy dans cette page
            # Une fois connecté il aura le role ROLE_PREVIOUS_ADMIN => voir base.html.twig
            # Se connecter   : https://127.0.0.1:8000?_switch_user=radoi.office@gmail.com
            # Se déconnecter : https://127.0.0.1:8000?_switch_user=_exit
            switch_user: true


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: PUBLIC_ACCESS } # renvoie true tous le temps
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
